version: '3.8'

services:
  nginx:
    # バージョン1.21.1のイメージを指定
    image: nginx:1.21.1
    # ポート番号80番を指定
    ports:
      - "80:80"
    volumes:
    # default.confをコンテナにマウント
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    # srcをコンテナにマウント
      - ./src:/var/www/
    # docker-compose起動時、php実行後にnginxを実行
    depends_on:
      - php

  php:
    # ./docker/phpにあるDockerfileを元にビルド
    build: ./docker/php
    # srcをコンテナにマウント
    volumes:
      - ./src:/var/www/

  mysql:
  # mysqlのバージョンを設定
    image: mysql:8.0.26
  # mad64のイメージを取得
    platform: linux/amd64
  # mysqlの設定
    environment:
  # 管理者パスワードをrootに設定
      MYSQL_ROOT_PASSWORD: root
  # データベースの初期設定
      MYSQL_DATABASE: laravel_db
  # 一般ユーザーの初期設定
      MYSQL_USER: laravel_user
  # 一般ユーザーのパスワードをlaravel_passに設定
      MYSQL_PASSWORD: laravel_pass
    command:
  # パスワードの認証方法を実装
      mysqld --default-authentication-plugin=mysql_native_password
    volumes:
  # dataを/var/lib/mysqlにマウント
      - ./docker/mysql/data:/var/lib/mysql
  # my.cnfを/etc/mysql/conf.d/my.cnfにマウント
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf

  phpmyadmin:
  # イメージの指定
    image: phpmyadmin/phpmyadmin
    # mad64のイメージを取得
    platform: linux/amd64
    environment:
  # ローカル以外のサーバも指定できるようにする
      - PMA_ARBITRARY=1
  # アクセスするホストを指定
      - PMA_HOST=mysql
  # ユーザー名をlaravel_userに設定
      - PMA_USER=laravel_user
  # パスワードを設定
      - PMA_PASSWORD=laravel_pass
    # docker-compose起動時、mysql実行後にphpmyadminを実行
    depends_on:
      - mysql
  # ポート番号を指定(ホスト側：コンテナ側)
    ports:
      - 8080:80